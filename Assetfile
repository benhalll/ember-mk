LICENSE = File.read("generators/license.js")


class RegisterLibWrapper < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      id = input.path.sub('/lib/','/').sub(/\.js$/, '')
      code = "\n(function(exports) {\n#{input.read}\n})({});\n"
      output.write code
    end
  end
end

class RegisterWrapper < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      id = input.path.sub('/lib/','/').sub(/\.js$/, '')
      code = "\nminispade.register('#{id}', function(exports) {\n#{input.read}\n});\n"
      output.write code
    end
  end
end

class RequireRewrite < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      result = input.read
      result.gsub!(%r{^\s*require\(['"]([^'"]*)['"]\);?\s*}) do |s|
        module_id = $1
        module_id.sub!(/^\./, File.dirname(input.path))
        module_id << '/main' if module_id !~ /\//
        module_id.sub!('~tests','tests')
        "minispade.require('#{module_id}');"
      end
      output.write result
    end
  end
end



input "packages"
output "examples/source"

match "*/tests/**/*.js" do
  filter RegisterWrapper
  filter RequireRewrite
  filter ConcatFilter, "ember-mk-tests.js"
end

match "*/css/*.css" do
  filter ConcatFilter, "ember-mk.css"
end

match "*/lib/**/*.js" do
  filter RegisterLibWrapper
  #filter RequireRewrite
  filter ConcatFilter, "ember-mk.js"
end


# Hack to ignore certain files

match "**/*.{json,md}" do
  filter ConcatFilter, "trash"
end

match "**/README" do
  filter ConcatFilter, "trash"
end

match "*/*.js" do
  filter ConcatFilter, "trash"
end

# vim: filetype=ruby
